https://www.youtube.com/watch?v=iDEuQjITm0E&list=PLXik_5Br-zO9Z8l3CE8zaIBkVWjHOboeL&index=1

1-INTRODUÇÃO AO CURSO
-PHP linguagem server side, serve para escutar script dentro do servidor web(back-end)
-na programação existem várias formas de se resolver o mesmo problema 

2-VÁRIAS FORMAS DE UTILIZAR O ECHO
-o 'echo' é uma das principais funcionalidades do php para se imprimir algo na tela 
-o 'print' tem a mesma funcionalidade, porem é mais lenta e tem menos potencial 
-é possível injetar conteudo PHP diretamente no conteúdo HTML 

3-PRINT EM VEZ DE ECHO
-o print apesar de ser semelhante ao echo, tem algumas particularidades como: 
    -aceita somente 1 argumento, ou seja, se for dar um print em mais de uma variável, separando por 
        vírgula, ele não aceita, diferentemente do echo 
    
4-COMO APRESENTAR CICLOS DE PHP NO HTML
-é usar as tags PHP dentro do conteúdo HTML para injetar código php 
-seguindo a estrutura de sintaxes corretas abrindo e fechando as tags php e os ciclos corretamente 

5-INSTRUÇÕES CONDICIONAIS DO PHP NO HTML 
-a lógica para uso de estruturas condicionais PHP dentro do conteúdo HTML é a mesma 

6-EXERCÍCIO - CONSTRUIR UMA TABELA HTML A PARTIR DE UM ARRAY
-ok 

7-TRIM, LTRIM, RTRIM E PARÂMETROS
-trim = serve para remover espaços em branco e outros caracteres do inicio e do final de uma string 
    -é possível tmb, passando além do parâmetro, um argumento, informar qual ou quais caracteres é para ser removido. trim($a, 'avem'); 
    -serve apenas para remover caracteres, e não para substituir 

8-UPPERCASE E LOWERCASE, MUITA ATENÇÃO
-são métodos nativos do PHP para converter os caracteres de uma string para letras maiúsculas ou minúsculas 
-strtoupper() = significar 'string to upper case', serve para converter para maiúsculas 
-strtolower() = significa 'string to lower', serve para converter para minúsculas 
por padrão, estes 2 métodos não convertem caracteres que usam acento, sendo necessário, usar o método 'multibytes': mb_strtoupper()
-existem métodos para se converter para maiúsculas ou minúsculas: ucfirst(), lcfirst()
-estes são métodos nativos do php para manipulação de dados tipo string 

9-STRLEN, RESULTADOS COM DIFERENTES TIPOS E MB STRLEN
-strlen(), como o nome diz string length, comprimento da string, este método retorna a quantidade de caracteres de uma string 
    -ele também contabiliza os espaços em branco 
-também existe a versão 'multibytes', que serve para contabilizar corretamente, quantidade de caractes de string com acentos 

10-STR REPEAT E STR PAD PARA OUPUTS MONOSPACED INTERESSANTES
-str_repeat('caractere', quantidade de vezes), serve para imprimir repetições de dados 

11-STR_CONTAINS, STR_STARTS_WITH E STR_ENDS_WITH
-o método str_contains($dentroDestaVariavel, $existeEssaVariavel), serve para fazer verificação, retorna sempre um booleano 
-existem tmb métodos para verificar se determinada string começa ou termina com determinado conteúdo. str_starts_with() e str_ends_with() 

12-AS VÁRIAS NUANCES DA FUNÇÃO SUBSTR
-o método nativo do PHP, substr() serve para capturar uma parte de uma string 
-ex: substr($variavel, posição inicio, posição fim), serve para determinar onde será o início e o fim da captura de caracteres 

13-EXPLODE E IMPLODE
-explode = permite transformar uma string num array de strings. 
    ex: uma string com vários nomes separados por vírgula, se transformam em um array 
-implode = permite colar numa string um conjunto de elementos de uma array
-ambos servem para manipular e converter dados, de string para array, e de array para string. 
-o método 'join' pode fazer a mesma coisa que um implode
 
 14-STR REPLACE
-tem a funcionalidade de substituir algum trecho de uma string 
-a função espera 3 parâmetros, o primeiro é procura por, depois substitui por, e o terceiro, na variável tal. 
-str_replace()

15-STR_SPLIT E MB_STR_SPLIT
-tem a funcionalidade de, como o próprio nome diz, separar string 
-permite criar um array de caracteres a partir de uma string, sendo que cada caractere da frase será um item do array, com seu respectivo índice. 

16-STRSTR
-serve para que, na variável informada, a partir do caractere informado, será retornado o restante da referida string 

17-STRPOS
-este método serve para verificar a primeira ocorrência da string informada no parâmetro, começa a string ou caractere informado no parâmetro da função 
-só aceita string

18-STRRPOS 
-semelhante a anterior, porém procura a última ocorrência da string informada no parâmetro

19-STRIPOS E STRRIPOS
-semelhante as 2 anteriores, porem, verifica tmb se o caractere é maiúsculo ou minúsculo 

20-NUMBER FORMAT
-muito útil para valores monetários 

21-CONFIGURAR PHP PARA USO NO TERMINAL
-ok 

22-COMO USAR O PHP NO TERMINAL
-CLI = command line interface, permite executar instruções de forma simples.
-SAPI = server application programming interface 
-é usar o php em linha de comando 

23-EXERCÍCIOS DE PHP NO TERMINAL
-ok 

24-ARGV NA CLI DO PHP
-ok 

25-ARGC E NOVOS EXERCÍCIOS NA CLI DO PHP
-ok 

26-INTRODUÇÃO ÀS FUNÇÕES DE FORMATAÇÃO DE STRINGS
-são as funções nativas do php para formatar strings
-printf = print format. permite após a string, incluir parâmetros que irão substituir o %s na string. 

27-PERCEBER COMO FUNCIONA SPRINTF PARTE 1 DE 2
-ok

28-PERCEBER COMO FUNCIONA SPRINTF PARTE 2 DE 2
-ok 



